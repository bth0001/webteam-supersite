<% include partials/header %>

  <h1 class="pageHeader">Hey <%= currentUser.firstName %>! Welcome to your <%= currentUser.team %> Dashboard.</h1>
  <div id="dashboard">
    <div id="dashboardLinks">
      <h3>Select a tool to use below:</h3><br />
      <div class="dashboardLinksContainer">
        <div class="galleryMenu"><a href="/tracker">
          <img src="https://i.imgur.com/QDOoFQe.png" alt="Team Tracker" />
          <p><%= currentUser.team %> Tracker</p></a>
        </div>
        <div class="galleryMenu"><a href="/projects-tracker">
          <img src="https://i.imgur.com/QDOoFQe.png" alt="Special Projects Tracker" />
          <p>Special Projects Tracker</p></a>
        </div>
        <div class="galleryMenu"><a href="/checklist">
          <img src="https://i.imgur.com/QDOoFQe.png" alt="Developer Checklist" />
          <p><%= currentUser.team %> Checklist</p></a>
        </div>
        <div class="galleryMenu"><a href="/idea-warehouse">
          <img src="https://i.imgur.com/VOI6pdZ.jpg " alt="Idea Warehouse" />
          <p>Idea Warehouse</p></a>
        </div>
        <div class="galleryMenu"><a href="/hats-off">
          <img src="https://i.imgur.com/GFi4LzV.png" alt="Hats Off" />
          <p>Hats-Off</p></a>
        </div>
        <div class="galleryMenu"><a href="/blueprint-generator">
          <img src="https://i.imgur.com/03ZeeGp.jpg" alt="Blueprint Generator" />
          <p>Blueprint Generator</p></a>
        </div>
        <div class="galleryMenu"><a href="/presence-url-tracker">
          <img src="https://i.imgur.com/QDOoFQe.png" alt="Presence URL Tracker" />
          <p>Presence URL Tracker</p></a>
        </div>
      </div><!-- end dashboardLinksContainer -->
    </div><!-- end dashboardLinks -->
    <div id="stats">
      <h3>View your stats from this month below:</h3>
      <br />
      <div class="statsContainer">
        <p>

            <style>
              body {
                font: 10px sans-serif;
              }
              .y.axisRight text {
                  fill: orange;
              }
              .y.axisLeft text {
                  fill: steelblue;
              }
              .axis path,
              .axis line {
                fill: none;
                stroke: #000;
                shape-rendering: crispEdges;
              }
              .bar1 {
                fill: steelblue;
              }
              .bar2 {
                fill: orange;
              }
              .x.axis path {
                display: none;
              }
            </style>

            <script src="http://d3js.org/d3.v3.min.js"></script>
            <script>
              var margin = {top: 80, right: 80, bottom: 80, left: 80},
                width = 600 - margin.left - margin.right,
                height = 400 - margin.top - margin.bottom;
              var x = d3.scale.ordinal()
                .rangeRoundBands([0, width], .1);
              var y0 = d3.scale.linear().domain([300, 1100]).range([height, 0]),
              y1 = d3.scale.linear().domain([20, 80]).range([height, 0]);
              var xAxis = d3.svg.axis()
                .scale(x)
                .orient("bottom");
              // create left yAxis
              var yAxisLeft = d3.svg.axis().scale(y0).ticks(4).orient("left");
              // create right yAxis
              var yAxisRight = d3.svg.axis().scale(y1).ticks(6).orient("right");
              var svg = d3.select("body").append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
                .append("g")
                .attr("class", "graph")
                .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
              d3.tsv("data.tsv", type, function(error, data) {
                x.domain(data.map(function(d) { return d.year; }));
                y0.domain([0, d3.max(data, function(d) { return d.money; })]);
                
                svg.append("g")
                  .attr("class", "x axis")
                  .attr("transform", "translate(0," + height + ")")
                  .call(xAxis);
                svg.append("g")
                  .attr("class", "y axis axisLeft")
                  .attr("transform", "translate(0,0)")
                  .call(yAxisLeft)
                .append("text")
                  .attr("y", 6)
                  .attr("dy", "-2em")
                  .style("text-anchor", "end")
                  .style("text-anchor", "end")
                  .text("Dollars");
                
                svg.append("g")
                  .attr("class", "y axis axisRight")
                  .attr("transform", "translate(" + (width) + ",0)")
                  .call(yAxisRight)
                .append("text")
                  .attr("y", 6)
                  .attr("dy", "-2em")
                  .attr("dx", "2em")
                  .style("text-anchor", "end")
                  .text("#");
                bars = svg.selectAll(".bar").data(data).enter();
                bars.append("rect")
                  .attr("class", "bar1")
                  .attr("x", function(d) { return x(d.year); })
                  .attr("width", x.rangeBand()/2)
                  .attr("y", function(d) { return y0(d.money); })
                  .attr("height", function(d,i,j) { return height - y0(d.money); }); 
                bars.append("rect")
                  .attr("class", "bar2")
                  .attr("x", function(d) { return x(d.year) + x.rangeBand()/2; })
                  .attr("width", x.rangeBand() / 2)
                  .attr("y", function(d) { return y1(d.number); })
                  .attr("height", function(d,i,j) { return height - y1(d.number); }); 
              });
              function type(d) {
                d.money = +d.money;
                return d;
              }
            </script>


          <% function countEssential() { %>
            <% var essCount = 0; var strCount = 0; var prodCount = 0; var tlinkCount = 0; %>
              <% tracking.forEach(function(tracked){ %>
                <% task.forEach(function(tasked){ %>
                <% if(currentUser.firstName === tracked.author.firstName) { %>
                  <% if(tracked.buildPkg === "Starter" && tasked.taskTypeName === "Site Build"){ %>
                    <% strCount++ %>
                  <% } %>
                  <% if(tracked.buildPkg === "Essential" && tasked.taskTypeName === "Site Build"){ %>
                    <% essCount++ %>
                  <% } %>
                  <% if(tasked.taskTypeName === "Production Change"){ %>
                    <% prodCount++ %>
                  <% } %>
                  <% if(tasked.taskTypeName === "T.LINK Branding"){ %>
                    <% tlinkCount++ %>
                  <% } %>
                <% } %>
              <% }); %>
            <% }); %>
            <h4>Essentials: <%= essCount %> | Starters: <%= strCount %> | Prod Change: <%= prodCount %> | T.LINK Branding: <%= tlinkCount %></h4>
            <script>
              d3.select('.statsContainer')
                .selectAll('p')
                .append('p')
            </script>
          <% } %>
        </p>
        <% countEssential(); %>    
      </div><!-- end statsContainer -->
    </div><!-- end stats -->
  </div><!-- end dashboard -->

  <% include partials/footer %>